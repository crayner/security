<?php
namespace Hillrange\Security\Repository;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Hillrange\Security\Entity\Failure;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * FailureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FailureRepository extends ServiceEntityRepository
{
	/**
	 * FailureRepository constructor.
	 *
	 * @param RegistryInterface $registry
	 */
	public function __construct(RegistryInterface $registry)
	{
		parent::__construct($registry, Failure::class);
	}

	public function loadOneByIP($ip)
	{
		if (empty(preg_match('#^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$#', $ip)))
			throw new \InvalidArgumentException('The IP address is not valid. %s', $ip);

		$failure = $this->createQueryBuilder('f')
			->where('f.address = :ip')
			->setParameter('ip', $ip)
			->getQuery()
			->getOneOrNullResult();

		if (empty($failure))
			$failure = new Failure($ip);

		return $failure;
	}
}
