<?php
namespace HillRange\Security\Repository;

use HillRange\Security\Entity\Failure;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * FailureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FailureRepository extends ServiceEntityRepository
{
	private $count;
	private $period;
	private $exceptions;

	public function __construct(RegistryInterface $registry, ContainerInterface $container)
	{
		parent::__construct($registry, Failure::class);
		$this->period     = $container->getParameterBag()->get('session_max_idle_time');
		$this->count      = $container->getParameterBag()->get('sign_in_count_minimum');
		$this->exceptions = $container->getParameterBag()->get('sign_in_ip_exceptions');

		return $this;
	}

	public function createNew()
	{
		return new Failure();
	}

	/**
	 * Test Remote Address
	 *
	 * @return boolean
	 */
	public function testRemoteAddress($ip)
	{
		if ($this->exceptedIP($ip))
			return true;
		$record = $this->findOneBy(array('address' => $ip));
		if (empty($record))
			return true;
		if ($record->getFailures() < $this->count)
			return true;
		if (strtotime('now') > ($record->getLastModified()->getTimeStamp() + $this->period))
			return true;

		return false;
	}

	public function exceptedIP($ip)
	{
		return in_array($ip, $this->exceptions);
	}
}
